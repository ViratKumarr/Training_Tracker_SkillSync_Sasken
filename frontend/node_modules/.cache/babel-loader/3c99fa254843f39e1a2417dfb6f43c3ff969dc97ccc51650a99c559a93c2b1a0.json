{"ast":null,"code":"import apiClient from './apiClient';\nexport const CourseService = {\n  getAllCourses: async () => {\n    try {\n      const response = await apiClient.get('/courses');\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Failed to fetch courses';\n    }\n  },\n  getCourseById: async id => {\n    try {\n      const response = await apiClient.get(`/courses/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Failed to fetch course';\n    }\n  },\n  getCoursesByCategory: async category => {\n    try {\n      const response = await apiClient.get(`/courses/category/${category}`);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'Failed to fetch courses by category';\n    }\n  },\n  getCoursesByType: async type => {\n    try {\n      const response = await apiClient.get(`/courses/type/${type}`);\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || 'Failed to fetch courses by type';\n    }\n  },\n  getMandatoryCourses: async () => {\n    try {\n      const response = await apiClient.get('/courses/mandatory');\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || 'Failed to fetch mandatory courses';\n    }\n  },\n  searchCourses: async keyword => {\n    try {\n      const response = await apiClient.get(`/courses/search?keyword=${encodeURIComponent(keyword)}`);\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || 'Failed to search courses';\n    }\n  },\n  createCourse: async courseData => {\n    try {\n      const response = await apiClient.post('/courses', courseData);\n      return response.data;\n    } catch (error) {\n      var _error$response7;\n      throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || 'Failed to create course';\n    }\n  },\n  updateCourse: async (id, courseData) => {\n    try {\n      const response = await apiClient.put(`/courses/${id}`, courseData);\n      return response.data;\n    } catch (error) {\n      var _error$response8;\n      throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || 'Failed to update course';\n    }\n  },\n  deleteCourse: async id => {\n    try {\n      const response = await apiClient.delete(`/courses/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response9;\n      throw ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || 'Failed to delete course';\n    }\n  },\n  getCoursesByTrainer: async trainerId => {\n    try {\n      const response = await apiClient.get(`/courses/trainer/${trainerId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response0;\n      throw ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || 'Failed to fetch trainer courses';\n    }\n  }\n};","map":{"version":3,"names":["apiClient","CourseService","getAllCourses","response","get","data","error","_error$response","getCourseById","id","_error$response2","getCoursesByCategory","category","_error$response3","getCoursesByType","type","_error$response4","getMandatoryCourses","_error$response5","searchCourses","keyword","encodeURIComponent","_error$response6","createCourse","courseData","post","_error$response7","updateCourse","put","_error$response8","deleteCourse","delete","_error$response9","getCoursesByTrainer","trainerId","_error$response0"],"sources":["/Users/azaddayal/Training_Tracker_Skill_Sync/frontend/src/services/CourseService.js"],"sourcesContent":["import apiClient from './apiClient';\n\nexport const CourseService = {\n  getAllCourses: async () => {\n    try {\n      const response = await apiClient.get('/courses');\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || 'Failed to fetch courses';\n    }\n  },\n\n  getCourseById: async (id) => {\n    try {\n      const response = await apiClient.get(`/courses/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || 'Failed to fetch course';\n    }\n  },\n\n  getCoursesByCategory: async (category) => {\n    try {\n      const response = await apiClient.get(`/courses/category/${category}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || 'Failed to fetch courses by category';\n    }\n  },\n\n  getCoursesByType: async (type) => {\n    try {\n      const response = await apiClient.get(`/courses/type/${type}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || 'Failed to fetch courses by type';\n    }\n  },\n\n  getMandatoryCourses: async () => {\n    try {\n      const response = await apiClient.get('/courses/mandatory');\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || 'Failed to fetch mandatory courses';\n    }\n  },\n\n  searchCourses: async (keyword) => {\n    try {\n      const response = await apiClient.get(`/courses/search?keyword=${encodeURIComponent(keyword)}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || 'Failed to search courses';\n    }\n  },\n\n  createCourse: async (courseData) => {\n    try {\n      const response = await apiClient.post('/courses', courseData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || 'Failed to create course';\n    }\n  },\n\n  updateCourse: async (id, courseData) => {\n    try {\n      const response = await apiClient.put(`/courses/${id}`, courseData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || 'Failed to update course';\n    }\n  },\n\n  deleteCourse: async (id) => {\n    try {\n      const response = await apiClient.delete(`/courses/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || 'Failed to delete course';\n    }\n  },\n\n  getCoursesByTrainer: async (trainerId) => {\n    try {\n      const response = await apiClient.get(`/courses/trainer/${trainerId}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || 'Failed to fetch trainer courses';\n    }\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}