{"ast":null,"code":"import axios from 'axios';\nimport apiClient from './apiClient';\nconst API_BASE_URL = 'http://localhost:8080/api';\n\n// Add response interceptor to handle errors\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const AuthService = {\n  login: async (email, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Login failed';\n    }\n  },\n  register: async userData => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'Registration failed';\n    }\n  },\n  getCurrentUser: async () => {\n    try {\n      const response = await apiClient.get('/users/profile');\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || 'Failed to get user profile';\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  },\n  getToken: () => {\n    return localStorage.getItem('token');\n  },\n  getUser: () => {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  }\n};\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","API_BASE_URL","interceptors","response","use","error","_error$response","status","localStorage","removeItem","window","location","href","Promise","reject","AuthService","login","email","password","post","data","_error$response2","register","userData","_error$response3","getCurrentUser","get","_error$response4","logout","isAuthenticated","getItem","getToken","getUser","user","JSON","parse"],"sources":["/Users/azaddayal/Desktop/Training_Tracker_Skill_Sync/frontend/src/services/AuthService.js"],"sourcesContent":["import axios from 'axios';\nimport apiClient from './apiClient';\n\nconst API_BASE_URL = 'http://localhost:8080/api';\n\n// Add response interceptor to handle errors\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const AuthService = {\n  login: async (email, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\n        email,\n        password,\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || 'Login failed';\n    }\n  },\n\n  register: async (userData) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || 'Registration failed';\n    }\n  },\n\n  getCurrentUser: async () => {\n    try {\n      const response = await apiClient.get('/users/profile');\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || 'Failed to get user profile';\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  },\n\n  getToken: () => {\n    return localStorage.getItem('token');\n  },\n\n  getUser: () => {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n};\n\nexport default apiClient; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAEnC,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACAD,SAAS,CAACE,YAAY,CAACC,QAAQ,CAACC,GAAG,CAChCD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACT,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMU,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAChC,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMJ,KAAK,CAACoB,IAAI,CAAC,GAAGlB,YAAY,aAAa,EAAE;QAC9DgB,KAAK;QACLC;MACF,CAAC,CAAC;MACF,OAAOf,QAAQ,CAACiB,IAAI;IACtB,CAAC,CAAC,OAAOf,KAAK,EAAE;MAAA,IAAAgB,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAhB,KAAK,CAACF,QAAQ,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBD,IAAI,KAAI,cAAc;IAC9C;EACF,CAAC;EAEDE,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAMJ,KAAK,CAACoB,IAAI,CAAC,GAAGlB,YAAY,gBAAgB,EAAEsB,QAAQ,CAAC;MAC5E,OAAOpB,QAAQ,CAACiB,IAAI;IACtB,CAAC,CAAC,OAAOf,KAAK,EAAE;MAAA,IAAAmB,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAnB,KAAK,CAACF,QAAQ,cAAAqB,gBAAA,uBAAdA,gBAAA,CAAgBJ,IAAI,KAAI,qBAAqB;IACrD;EACF,CAAC;EAEDK,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMtB,QAAQ,GAAG,MAAMH,SAAS,CAAC0B,GAAG,CAAC,gBAAgB,CAAC;MACtD,OAAOvB,QAAQ,CAACiB,IAAI;IACtB,CAAC,CAAC,OAAOf,KAAK,EAAE;MAAA,IAAAsB,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAtB,KAAK,CAACF,QAAQ,cAAAwB,gBAAA,uBAAdA,gBAAA,CAAgBP,IAAI,KAAI,4BAA4B;IAC5D;EACF,CAAC;EAEDQ,MAAM,EAAEA,CAAA,KAAM;IACZpB,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAEDoB,eAAe,EAAEA,CAAA,KAAM;IACrB,OAAO,CAAC,CAACrB,YAAY,CAACsB,OAAO,CAAC,OAAO,CAAC;EACxC,CAAC;EAEDC,QAAQ,EAAEA,CAAA,KAAM;IACd,OAAOvB,YAAY,CAACsB,OAAO,CAAC,OAAO,CAAC;EACtC,CAAC;EAEDE,OAAO,EAAEA,CAAA,KAAM;IACb,MAAMC,IAAI,GAAGzB,YAAY,CAACsB,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,GAAG,IAAI;EACvC;AACF,CAAC;AAED,eAAejC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}